//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Settings/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""6e1c2669-dc84-48b9-9c10-07cb3bcc2a2a"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e250fb68-4608-454f-a3c4-18b2cf01cb03"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a05619c5-ff62-4b63-bae6-fdc901151918"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Elevation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1f01db04-953b-4eec-b07f-a7de58384bd5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Action"",
                    ""type"": ""Button"",
                    ""id"": ""5fcd594d-f629-4c48-b4a2-8a46493a48f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""26c45e54-afb3-40c4-8778-22115d3708b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch"",
                    ""type"": ""PassThrough"",
                    ""id"": ""12c64545-91a2-47c5-8e40-3b87fae3e640"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch0"",
                    ""type"": ""Button"",
                    ""id"": ""0638b8f4-ef07-4d2c-8750-d9f95da72fd1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch1"",
                    ""type"": ""Button"",
                    ""id"": ""97119b49-c447-4fa3-9444-9edeafac3b59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch2"",
                    ""type"": ""Button"",
                    ""id"": ""0815141e-df1c-4223-83e7-918056600443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch3"",
                    ""type"": ""Button"",
                    ""id"": ""d68c5177-3488-4db2-94c6-ea9614b39361"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""560e8d8c-3093-49fc-982a-25605651a2a1"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""89319418-acb8-486d-a731-ca93ee8670fd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""00dd105b-0c04-49d4-9a30-d85d2b3c0038"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fa9015b1-3cce-4c14-9489-3f85be338136"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""db850a5d-6133-4c7f-a981-ae7379e8b4d5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1c6951a6-7cb8-4adf-95d6-598c0e8d00b4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d175a7d4-6eb6-4d8f-8fc5-b7de9465d776"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40b35999-14d3-4c6a-b980-a96b55355716"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Space/Ctrl"",
                    ""id"": ""0c7a6eda-fc6c-408d-b550-b73a66f6ad48"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2c081d64-0765-4b2b-8730-7a7013e75993"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e743e136-be41-43d5-9da6-838bc0593c2b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""E/Q"",
                    ""id"": ""26cf93ff-bf86-4222-af60-6e7e90c0ab1f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""550a65d0-08a0-4ce4-aef4-4538811f7126"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2d02323f-b23e-4d80-8fd4-7f0679061a79"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""26245686-7a64-42a7-b6ff-5300d97e7548"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""5bfb0fab-7429-44a6-b38e-8e978da71f51"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b8de1955-72bc-4cb9-98f0-7da4d57580a2"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8353f498-c995-4bbd-8423-42181d6677dd"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e070341-0299-45c7-86f5-fd0e41db0ba2"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a084af01-cbcc-4b42-8acc-6f2893cb08ed"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f41dd3aa-0919-4f62-bc28-0d2cacf01801"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SubGameplay"",
            ""id"": ""265470e3-df4a-400a-b509-417ea0aaed26"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4dd09c19-5eba-4847-b29b-3a69466f8228"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6911e8cc-032d-4af9-a9ad-944d5ec5879e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Elevation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b65e5618-5b20-4eab-9ea6-cf60c8906e8e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExitPilot"",
                    ""type"": ""Button"",
                    ""id"": ""8c5f6b26-2576-4d35-bb3f-7ebe9bc94219"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Space/Ctrl"",
                    ""id"": ""73d5c9a4-013c-4574-b107-37dfa2a828e1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3eaa8faf-f76c-43ae-9ece-d20f31d55e7c"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d8f38027-0a95-4b2d-96d2-89696b7b987d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""E/Q"",
                    ""id"": ""4772a4ee-c110-4aed-b95c-ff337f47610d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d4e105b6-71e7-484d-aaee-6d2dcf9c326a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""8f49edc3-54d6-4eee-a846-34a32ee80231"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""47b8aedb-6e84-4846-9659-5078773333c5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4c94c1e2-8563-454f-9e76-131e1c3499f9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""efdda5ba-b38e-48d5-b5f4-29883e9af3aa"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""11f000fb-2d62-4aa7-bfb0-a55e09352d2e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a3f48bc6-a71d-4020-aa64-39affd2139ab"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""59bb3ec7-3adf-4e2c-903b-20e7904d92a5"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87c929dc-3114-4020-9250-54b222dd5869"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitPilot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""App"",
            ""id"": ""c5653564-f885-4ccd-bec5-e93e48c12253"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""7647e81d-7f2c-4d83-85f8-3529230a627b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""61952353-d1b9-44ef-b56a-2def4042dbe9"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53e41187-d1f5-4403-ace0-5bf185d726a2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Look = m_Gameplay.FindAction("Look", throwIfNotFound: true);
        m_Gameplay_Movement = m_Gameplay.FindAction("Movement", throwIfNotFound: true);
        m_Gameplay_Elevation = m_Gameplay.FindAction("Elevation", throwIfNotFound: true);
        m_Gameplay_Action = m_Gameplay.FindAction("Action", throwIfNotFound: true);
        m_Gameplay_Interact = m_Gameplay.FindAction("Interact", throwIfNotFound: true);
        m_Gameplay_Switch = m_Gameplay.FindAction("Switch", throwIfNotFound: true);
        m_Gameplay_Switch0 = m_Gameplay.FindAction("Switch0", throwIfNotFound: true);
        m_Gameplay_Switch1 = m_Gameplay.FindAction("Switch1", throwIfNotFound: true);
        m_Gameplay_Switch2 = m_Gameplay.FindAction("Switch2", throwIfNotFound: true);
        m_Gameplay_Switch3 = m_Gameplay.FindAction("Switch3", throwIfNotFound: true);
        // SubGameplay
        m_SubGameplay = asset.FindActionMap("SubGameplay", throwIfNotFound: true);
        m_SubGameplay_Look = m_SubGameplay.FindAction("Look", throwIfNotFound: true);
        m_SubGameplay_Movement = m_SubGameplay.FindAction("Movement", throwIfNotFound: true);
        m_SubGameplay_Elevation = m_SubGameplay.FindAction("Elevation", throwIfNotFound: true);
        m_SubGameplay_ExitPilot = m_SubGameplay.FindAction("ExitPilot", throwIfNotFound: true);
        // App
        m_App = asset.FindActionMap("App", throwIfNotFound: true);
        m_App_Pause = m_App.FindAction("Pause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Look;
    private readonly InputAction m_Gameplay_Movement;
    private readonly InputAction m_Gameplay_Elevation;
    private readonly InputAction m_Gameplay_Action;
    private readonly InputAction m_Gameplay_Interact;
    private readonly InputAction m_Gameplay_Switch;
    private readonly InputAction m_Gameplay_Switch0;
    private readonly InputAction m_Gameplay_Switch1;
    private readonly InputAction m_Gameplay_Switch2;
    private readonly InputAction m_Gameplay_Switch3;
    public struct GameplayActions
    {
        private @Controls m_Wrapper;
        public GameplayActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_Gameplay_Look;
        public InputAction @Movement => m_Wrapper.m_Gameplay_Movement;
        public InputAction @Elevation => m_Wrapper.m_Gameplay_Elevation;
        public InputAction @Action => m_Wrapper.m_Gameplay_Action;
        public InputAction @Interact => m_Wrapper.m_Gameplay_Interact;
        public InputAction @Switch => m_Wrapper.m_Gameplay_Switch;
        public InputAction @Switch0 => m_Wrapper.m_Gameplay_Switch0;
        public InputAction @Switch1 => m_Wrapper.m_Gameplay_Switch1;
        public InputAction @Switch2 => m_Wrapper.m_Gameplay_Switch2;
        public InputAction @Switch3 => m_Wrapper.m_Gameplay_Switch3;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Elevation.started += instance.OnElevation;
            @Elevation.performed += instance.OnElevation;
            @Elevation.canceled += instance.OnElevation;
            @Action.started += instance.OnAction;
            @Action.performed += instance.OnAction;
            @Action.canceled += instance.OnAction;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Switch.started += instance.OnSwitch;
            @Switch.performed += instance.OnSwitch;
            @Switch.canceled += instance.OnSwitch;
            @Switch0.started += instance.OnSwitch0;
            @Switch0.performed += instance.OnSwitch0;
            @Switch0.canceled += instance.OnSwitch0;
            @Switch1.started += instance.OnSwitch1;
            @Switch1.performed += instance.OnSwitch1;
            @Switch1.canceled += instance.OnSwitch1;
            @Switch2.started += instance.OnSwitch2;
            @Switch2.performed += instance.OnSwitch2;
            @Switch2.canceled += instance.OnSwitch2;
            @Switch3.started += instance.OnSwitch3;
            @Switch3.performed += instance.OnSwitch3;
            @Switch3.canceled += instance.OnSwitch3;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Elevation.started -= instance.OnElevation;
            @Elevation.performed -= instance.OnElevation;
            @Elevation.canceled -= instance.OnElevation;
            @Action.started -= instance.OnAction;
            @Action.performed -= instance.OnAction;
            @Action.canceled -= instance.OnAction;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Switch.started -= instance.OnSwitch;
            @Switch.performed -= instance.OnSwitch;
            @Switch.canceled -= instance.OnSwitch;
            @Switch0.started -= instance.OnSwitch0;
            @Switch0.performed -= instance.OnSwitch0;
            @Switch0.canceled -= instance.OnSwitch0;
            @Switch1.started -= instance.OnSwitch1;
            @Switch1.performed -= instance.OnSwitch1;
            @Switch1.canceled -= instance.OnSwitch1;
            @Switch2.started -= instance.OnSwitch2;
            @Switch2.performed -= instance.OnSwitch2;
            @Switch2.canceled -= instance.OnSwitch2;
            @Switch3.started -= instance.OnSwitch3;
            @Switch3.performed -= instance.OnSwitch3;
            @Switch3.canceled -= instance.OnSwitch3;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // SubGameplay
    private readonly InputActionMap m_SubGameplay;
    private List<ISubGameplayActions> m_SubGameplayActionsCallbackInterfaces = new List<ISubGameplayActions>();
    private readonly InputAction m_SubGameplay_Look;
    private readonly InputAction m_SubGameplay_Movement;
    private readonly InputAction m_SubGameplay_Elevation;
    private readonly InputAction m_SubGameplay_ExitPilot;
    public struct SubGameplayActions
    {
        private @Controls m_Wrapper;
        public SubGameplayActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_SubGameplay_Look;
        public InputAction @Movement => m_Wrapper.m_SubGameplay_Movement;
        public InputAction @Elevation => m_Wrapper.m_SubGameplay_Elevation;
        public InputAction @ExitPilot => m_Wrapper.m_SubGameplay_ExitPilot;
        public InputActionMap Get() { return m_Wrapper.m_SubGameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SubGameplayActions set) { return set.Get(); }
        public void AddCallbacks(ISubGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_SubGameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SubGameplayActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Elevation.started += instance.OnElevation;
            @Elevation.performed += instance.OnElevation;
            @Elevation.canceled += instance.OnElevation;
            @ExitPilot.started += instance.OnExitPilot;
            @ExitPilot.performed += instance.OnExitPilot;
            @ExitPilot.canceled += instance.OnExitPilot;
        }

        private void UnregisterCallbacks(ISubGameplayActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Elevation.started -= instance.OnElevation;
            @Elevation.performed -= instance.OnElevation;
            @Elevation.canceled -= instance.OnElevation;
            @ExitPilot.started -= instance.OnExitPilot;
            @ExitPilot.performed -= instance.OnExitPilot;
            @ExitPilot.canceled -= instance.OnExitPilot;
        }

        public void RemoveCallbacks(ISubGameplayActions instance)
        {
            if (m_Wrapper.m_SubGameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISubGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_SubGameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SubGameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SubGameplayActions @SubGameplay => new SubGameplayActions(this);

    // App
    private readonly InputActionMap m_App;
    private List<IAppActions> m_AppActionsCallbackInterfaces = new List<IAppActions>();
    private readonly InputAction m_App_Pause;
    public struct AppActions
    {
        private @Controls m_Wrapper;
        public AppActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_App_Pause;
        public InputActionMap Get() { return m_Wrapper.m_App; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AppActions set) { return set.Get(); }
        public void AddCallbacks(IAppActions instance)
        {
            if (instance == null || m_Wrapper.m_AppActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AppActionsCallbackInterfaces.Add(instance);
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IAppActions instance)
        {
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IAppActions instance)
        {
            if (m_Wrapper.m_AppActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAppActions instance)
        {
            foreach (var item in m_Wrapper.m_AppActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AppActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AppActions @App => new AppActions(this);
    public interface IGameplayActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnElevation(InputAction.CallbackContext context);
        void OnAction(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnSwitch(InputAction.CallbackContext context);
        void OnSwitch0(InputAction.CallbackContext context);
        void OnSwitch1(InputAction.CallbackContext context);
        void OnSwitch2(InputAction.CallbackContext context);
        void OnSwitch3(InputAction.CallbackContext context);
    }
    public interface ISubGameplayActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnElevation(InputAction.CallbackContext context);
        void OnExitPilot(InputAction.CallbackContext context);
    }
    public interface IAppActions
    {
        void OnPause(InputAction.CallbackContext context);
    }
}
